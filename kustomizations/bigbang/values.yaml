domain: bigbang.dev

registryCredentials:
  registry: "###ZARF_REGISTRY###"
  username: "zarf-pull"
  password: "###ZARF_REGISTRY_AUTH_PULL###"

git:
  existingSecret: "zarf-git-secret"

flux:
  interval: 1m
  rollback:
    cleanupOnFail: false

networkPolicies:
  enabled: false
  # When in prod use a real CIDR. Don't do this, it isn't secure.
  controlPlaneCidr: "0.0.0.0/0"
  nodeCidr: "0.0.0.0/0"

istio:
  enabled: true
  git:
    repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__core__istio-controlplane.git
  ingressGateways:
    public-ingressgateway:
      type: "LoadBalancer"
      kubernetesResourceSpec:
        resources:
          requests:
            cpu: "100m"
            memory: "512Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
  gateways:
    public:
      tls:
        key: |
          -----BEGIN PRIVATE KEY-----
          MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDTogvrzocgDZcc
          +F2+e4Vk46tuGr2tyAlVdMOiF2iRxhME5AIrPZaRURA2CudHXCpRpQvOkqMN8epN
          cYKgaZltjBz8vGeCyTI4266jEICBrAMaFvpm7RVDjn6yywMhQS1aIeHUlPGYqOJO
          iiA/h/QNdskupUdLk0rdmqUmaZM8JBS2nauFtqo0hEHx2qaCnmqgbSjH4JcHRAZy
          siz78OTO+8zC5ZoeMs5NrF8QvydSKtmEqJkVcgovDWGQsiMtqi46HngCMRw24jB5
          dKo3lSNlLmoBtC5X2gt528hgzy8fCseVGry3WGbTtR5qKHKI0cyPPBI1++UwyP8X
          dObst2MjAgMBAAECggEADrz2P5G+b0kDAQ162c0YWRJR2fUayINpwv3CsgMXUS+O
          G4UVcZV0auJOUrUnrhyJBe6Mh/JGUK5MNuB0zF8OREbBrggg3UbNrI//9XMsv9sO
          zD5Vad2Q4YeG40SoDyTO17wMUhWdTZhVSkrsPABnypg/InR4Jpc3W39tiONJUaLB
          LhgICRAk5MdvLYsGkjebOPKGx2sy4oHvTZ4HRr9z0h+jGIUpFhTc/ED/A+JoMg0f
          pQEpgJahj5r1Gn8morAN8XJdeNQkpC75o8yFgdy3awYBuf9ZqhURhircMaxr3INs
          cdpMtdEAy0wKexqEzQPuLrH9hX1y/8iXVe8SggcqwQKBgQDw/7u12dk1gFnueAO5
          hEii3HaT6GsYaB7VH03mnTy050u0ZgtzxVZmPHN8cKgqT2HgKz83f+RfQEx1PC87
          H96hFA/2dcufrP0BFU3k68kvnwM5KAWHfzJ1PmTQaIZ+h4Yo9isJ8wuoqPW8pqSP
          CREJeSb07ZtcTCPs1fbC5Z9f2QKBgQDgzl98AR0Qz0uI0eQoJ/Hben91k7y2nfo8
          yyCw5kqXeRtF5l+OfqtSsKJgqzpu9l76k3oRY0nJ/m4Xxnlrbawa3OWCCtjzqG4r
          a+IKtySBI2ypyFiDw9wcOIbEHJizrjgOu0bVFoukkpTgk+TRzOS0lGParPM94t90
          nDmvS+E5WwKBgEE2kk7FIlet4af75dYfi6A2VAf2DnTOR/mXvPa4eaLiK8QnENZF
          AfosRXvY6Eh6rpuAWFzmSJ/VwFrA7G7tUsr3qNIiUfVlVBkk8K0PeKNgPfkLcWOW
          8cp0FcenYS1/8rfG1SKeF/uNrOFdno3uACQ2GmqQmUfCer4tr9ZRWG0RAoGBANuB
          p0p16+OWBbM6/wUWu9oK6pnr/8Bw0P67eNhChWMSJcdDAtsoZDEBuAucJhpjBqq1
          heOkh1Bs1yLv8W8sT3iLaK5p2R1RwQE0/ipoWYSfCmNd9M/0VuBXcX/cTF5mJuZ7
          htZahU/UsPn4bt1Mq6SHoFjNt1UeSgKa6Nh5xxkxAoGAX6uh2vUleUPeKNhYQigB
          l9zlDpbtCpwfMds189HQufpVUsunP4183pE3PuGcO5NcUPsnFPJx/9CLbDeznAUT
          ZSiedu5LBQD9enuns5qja1JCLTczx4h9J4VC5dta2LwJEKdl3JFV0TtRLZem4vkw
          PMvLLr/bq/3meBHUPHFCbVI=
          -----END PRIVATE KEY-----
        cert: |
          -----BEGIN CERTIFICATE-----
          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
          YMtfEJbrfBOmH+uA6dgwhJ8sBw==
          -----END CERTIFICATE-----
          -----BEGIN CERTIFICATE-----
          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
          nLRbwHOoq7hHwg==
          -----END CERTIFICATE-----
          -----BEGIN CERTIFICATE-----
          MIIFYDCCBEigAwIBAgIQQAF3ITfU6UK47naqPGQKtzANBgkqhkiG9w0BAQsFADA/
          MSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT
          DkRTVCBSb290IENBIFgzMB4XDTIxMDEyMDE5MTQwM1oXDTI0MDkzMDE4MTQwM1ow
          TzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh
          cmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwggIiMA0GCSqGSIb3DQEB
          AQUAA4ICDwAwggIKAoICAQCt6CRz9BQ385ueK1coHIe+3LffOJCMbjzmV6B493XC
          ov71am72AE8o295ohmxEk7axY/0UEmu/H9LqMZshftEzPLpI9d1537O4/xLxIZpL
          wYqGcWlKZmZsj348cL+tKSIG8+TA5oCu4kuPt5l+lAOf00eXfJlII1PoOK5PCm+D
          LtFJV4yAdLbaL9A4jXsDcCEbdfIwPPqPrt3aY6vrFk/CjhFLfs8L6P+1dy70sntK
          4EwSJQxwjQMpoOFTJOwT2e4ZvxCzSow/iaNhUd6shweU9GNx7C7ib1uYgeGJXDR5
          bHbvO5BieebbpJovJsXQEOEO3tkQjhb7t/eo98flAgeYjzYIlefiN5YNNnWe+w5y
          sR2bvAP5SQXYgd0FtCrWQemsAXaVCg/Y39W9Eh81LygXbNKYwagJZHduRze6zqxZ
          Xmidf3LWicUGQSk+WT7dJvUkyRGnWqNMQB9GoZm1pzpRboY7nn1ypxIFeFntPlF4
          FQsDj43QLwWyPntKHEtzBRL8xurgUBN8Q5N0s8p0544fAQjQMNRbcTa0B7rBMDBc
          SLeCO5imfWCKoqMpgsy6vYMEG6KDA0Gh1gXxG8K28Kh8hjtGqEgqiNx2mna/H2ql
          PRmP6zjzZN7IKw0KKP/32+IVQtQi0Cdd4Xn+GOdwiK1O5tmLOsbdJ1Fu/7xk9TND
          TwIDAQABo4IBRjCCAUIwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYw
          SwYIKwYBBQUHAQEEPzA9MDsGCCsGAQUFBzAChi9odHRwOi8vYXBwcy5pZGVudHJ1
          c3QuY29tL3Jvb3RzL2RzdHJvb3RjYXgzLnA3YzAfBgNVHSMEGDAWgBTEp7Gkeyxx
          +tvhS5B1/8QVYIWJEDBUBgNVHSAETTBLMAgGBmeBDAECATA/BgsrBgEEAYLfEwEB
          ATAwMC4GCCsGAQUFBwIBFiJodHRwOi8vY3BzLnJvb3QteDEubGV0c2VuY3J5cHQu
          b3JnMDwGA1UdHwQ1MDMwMaAvoC2GK2h0dHA6Ly9jcmwuaWRlbnRydXN0LmNvbS9E
          U1RST09UQ0FYM0NSTC5jcmwwHQYDVR0OBBYEFHm0WeZ7tuXkAXOACIjIGlj26Ztu
          MA0GCSqGSIb3DQEBCwUAA4IBAQAKcwBslm7/DlLQrt2M51oGrS+o44+/yQoDFVDC
          5WxCu2+b9LRPwkSICHXM6webFGJueN7sJ7o5XPWioW5WlHAQU7G75K/QosMrAdSW
          9MUgNTP52GE24HGNtLi1qoJFlcDyqSMo59ahy2cI2qBDLKobkx/J3vWraV0T9VuG
          WCLKTVXkcGdtwlfFRjlBz4pYg1htmf5X6DYO8A4jqv2Il9DjXA6USbW1FzXSLr9O
          he8Y4IWS6wY7bCkjCWDcRQJMEhg76fsO3txE+FiYruq9RUWhiF1myv4Q6W+CyBFC
          Dfvp7OOGAN6dEOM4+qR9sdjoSYKEBpsr6GtPAQw4dy753ec5
          -----END CERTIFICATE-----
  values:
    hub: "###ZARF_REGISTRY###/ironbank/opensource/istio"
    cni:
      image:
        hub: "###ZARF_REGISTRY###/ironbank/opensource/istio"
    istiod:
      hpaSpec:
        maxReplicas: 1
        minReplicas: 1
      resources:
        requests:
          cpu: "100m"
          memory: "1Gi"
        limits:
          cpu: "500m"
          memory: "1Gi"
    kiali:
      dashboard:
        auth:
          strategy: "anonymous"

istiooperator:
  enabled: true
  git:
    repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__core__istio-operator.git
  values:
    hub: "###ZARF_REGISTRY###/ironbank/opensource/istio"
    operator:
      resources:
        requests:
          cpu: "100m"
          memory: "256Mi"
        limits:
          cpu: "500m"
          memory: "256Mi"

jaeger:
  enabled: true
  git:
    repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__core__jaeger.git
  values:
    image:
      repository: "###ZARF_REGISTRY###/ironbank/opensource/jaegertracing/jaeger-operator"
    retention:
      image: "###ZARF_REGISTRY###/ironbank/opensource/jaegertracing/jaeger-es-index-cleaner:1.24.0"
    resources:
      requests:
        cpu: "100m"
        memory: "128Mi"
      limits:
        cpu: "500m"
        memory: "128Mi"
    jaeger:
      spec:
        allInOne:
          image: "###ZARF_REGISTRY###/ironbank/opensource/jaegertracing/all-in-one:1.24.0"
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "128Mi"
        agent:
          image: "###ZARF_REGISTRY###/ironbank/opensource/jaegertracing/jaeger-agent:1.24.0"
        ingester:
          image: "###ZARF_REGISTRY###/ironbank/opensource/jaegertracing/jaeger-ingester:1.24.0"
        query:
          image: "###ZARF_REGISTRY###/ironbank/opensource/jaegertracing/jaeger-query:1.24.0"
        collector:
          image: "###ZARF_REGISTRY###/ironbank/opensource/jaegertracing/jaeger-collector:1.24.0"
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "128Mi"

kiali:
  enabled: true
  git:
    repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__core__kiali.git
  values:
    image:
      repo: "###ZARF_REGISTRY###/ironbank/opensource/kiali/kiali-operator"
    resources:
      requests:
        cpu: "100m"
        memory: "256Mi"
      limits:
        cpu: "500m"
        memory: "256Mi"
    cr:
      spec:
        deployment:
          image_name: "###ZARF_REGISTRY###/ironbank/opensource/kiali/kiali"
          resources:
            requests:
              cpu: "100m"
              memory: "368Mi"
            limits:
              cpu: "500m"
              memory: "368Mi"

clusterAuditor:
  enabled: true
  git:
    repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__core__cluster-auditor.git
  values:
    image:
      repo: "###ZARF_REGISTRY###/ironbank/cluster-auditor/opa-collector"
    resources:
      requests:
        cpu: "100m"
        memory: "512Mi"
      limits:
        cpu: "500m"
        memory: "512Mi"

gatekeeper:
  enabled: true
  git:
    repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__core__policy.git
  values:
    postInstall:
      labelNamespace:
        image:
          repository: "###ZARF_REGISTRY###/ironbank/opensource/kubernetes-1.21/kubectl"
    postUpgrade:
      cleanupCRD:
        image:
          repository: "###ZARF_REGISTRY###/ironbank/opensource/kubernetes-1.21/kubectl"
    image:
      repository: "###ZARF_REGISTRY###/ironbank/opensource/openpolicyagent/gatekeeper"
    replicas: 1
    controllerManager:
      resources:
        requests:
          cpu: "175m"
          memory: "512Mi"
        limits:
          cpu: "1"
          memory: "2Gi"
    audit:
      resources:
        requests:
          cpu: "200m"
          memory: "768Mi"
        limits:
          cpu: "1.2"
          memory: "2Gi"
    violations:
      allowedDockerRegistries:
        parameters:
          repos:
            - "###ZARF_REGISTRY###"
          excludedResources:
            # K3s kube-system stuff, better than excluding the whole namespace
            - "kube-system/coredns-.*"
            - "kube-system/local-path-provisioner-.*"
            - "kube-system/metrics-server-.*"
            - "kube-system/svclb-.*"
            - "kube-system/traefik-.*"
            # K3s needs these due to how it creates services of type "LoadBalancer"
            - "istio-system/lb-port-.*"
            - "istio-system/svclb-.*"
            # K3s needs this if you are doing K3s-specific "HelmRelease"-type CRDs
            - ".*/helm-install-.*"
            - ".*/helm"
            # TODO: Get Gitea in Iron Bank
            - "git/stuart-gitea-.*"
            - "git/gitea"
            - "git/init"
      hostNetworking:
        parameters:
          excludedResources:
            # K3s needs these due to how it creates services of type "LoadBalancer"
            - "istio-system/svclb-.*"
            - "istio-system/lb-port-.*"
      httpsOnly:
        parameters:
          excludedResources:
            # TODO: Fix these ingresses so they don't need to be excluded
            - "git/git-ingress"
            - "registry/registry-ingress"

logging:
  enabled: true
  git:
    repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__core__elasticsearch-kibana.git
  values:
    elasticsearch:
      image:
        repository: "###ZARF_REGISTRY###/ironbank/elastic/elasticsearch/elasticsearch"
      master:
        count: 1
        persistence:
          size: "5Gi"
        resources:
          requests:
            cpu: "100m"
            memory: "3Gi"
          limits:
            cpu: "500m"
            memory: "3Gi"
      data:
        count: 1
        persistence:
          size: 5Gi
        resources:
          requests:
            cpu: "100m"
            memory: "3Gi"
          limits:
            cpu: "500m"
            memory: "3Gi"
    kibana:
      image:
        repository: "###ZARF_REGISTRY###/ironbank/elastic/kibana/kibana"
      count: 1
      resources:
        requests:
          memory: "1Gi"
          cpu: "100m"
        limits:
          memory: "1Gi"
          cpu: "500m"
    upgradeJob:
      image:
        repository: "###ZARF_REGISTRY###/ironbank/big-bang/base"

eckoperator:
  enabled: true
  git:
    repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__core__eck-operator.git
  values:
    image:
      repository: "###ZARF_REGISTRY###/ironbank/elastic/eck-operator/eck-operator"

fluentbit:
  enabled: true
  git:
    repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__core__fluentbit.git
  values:
    image:
      repository: "###ZARF_REGISTRY###/ironbank/opensource/fluent/fluent-bit"
    securityContext:
      privileged: true
    resources:
      requests:
        cpu: "100m"
        memory: "128Mi"
      limits:
        cpu: "500m"
        memory: "128Mi"

monitoring:
  enabled: true
  git:
    repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__core__monitoring.git
  values:
    alertmanager:
      alertmanagerSpec:
        image:
          repository: "###ZARF_REGISTRY###/ironbank/opensource/prometheus/alertmanager"
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "256Mi"
    prometheusOperator:
      image:
        repository: "###ZARF_REGISTRY###/ironbank/opensource/prometheus-operator/prometheus-operator"
      resources:
        requests:
          cpu: "100m"
          memory: "512Mi"
        limits:
          cpu: "500m"
          memory: "512Mi"
      admissionWebhooks:
        patch:
          image:
            repository: "###ZARF_REGISTRY###/ironbank/opensource/jet/kube-webhook-certgen"
      configmapReloadImage:
        repository: "###ZARF_REGISTRY###/ironbank/opensource/jimmidyson/configmap-reload"
      prometheusConfigReloaderImage:
        repository: "###ZARF_REGISTRY###/ironbank/opensource/prometheus-operator/prometheus-config-reloader"
      kubectlImage:
        repository: "###ZARF_REGISTRY###/ironbank/opensource/kubernetes-1.20/kubectl-1.20"
    prometheus:
      prometheusSpec:
        image:
          repository: "###ZARF_REGISTRY###/ironbank/opensource/prometheus/prometheus"
        resources:
          requests:
            cpu: "100m"
            memory: "512Mi"
          limits:
            cpu: "500m"
            memory: "2Gi"
    grafana:
      image:
        repository: "###ZARF_REGISTRY###/ironbank/opensource/grafana/grafana"
      sidecar:
        image:
          repository: "###ZARF_REGISTRY###/ironbank/kiwigrid/k8s-sidecar"
        resources:
          requests:
            cpu: "50m"
            memory: "50Mi"
          limits:
            cpu: "500m"
            memory: "100Mi"
      resources:
        requests:
          cpu: "100m"
          memory: "128Mi"
        limits:
          cpu: "500m"
          memory: "128Mi"
      testFramework:
        image: "###ZARF_REGISTRY###/ironbank/opensource/bats/bats"
    kube-state-metrics:
      image:
        repository: "###ZARF_REGISTRY###/ironbank/opensource/coreos/kube-state-metrics"
      resources:
        requests:
          cpu: "10m"
          memory: "128Mi"
        limits:
          cpu: "500m"
          memory: "128Mi"
    prometheus-node-exporter:
      image:
        repository: "###ZARF_REGISTRY###/ironbank/opensource/prometheus/node-exporter"
      resources:
        requests:
          cpu: "100m"
          memory: "128Mi"
        limits:
          cpu: "500m"
          memory: "128Mi"

twistlock:
  enabled: true
  git:
    repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__security-tools__twistlock.git
  values:
    console:
      image:
        repository: "###ZARF_REGISTRY###/ironbank/twistlock/console/console"
      persistence:
        size: 5Gi
    resources:
      requests:
        cpu: "100m"
        memory: "1Gi"
      limits:
        cpu: "500m"
        memory: "2Gi"

addons:
  # Addons for bb-umbrella
  sonarqube:
    # SonarQube won't work right now due to this bug: https://repo1.dso.mil/platform-one/big-bang/apps/developer-tools/sonarqube/-/issues/35
    enabled: false
    git:
      repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__developer-tools__sonarqube.git
    values:
      image:
        repository: "###ZARF_REGISTRY###/ironbank/big-bang/sonarqube"
      istio:
        enabled: true
        sonarqube:
          gateways:
            - istio-system/public
      postgresql:
        global:
          imagePullSecrets:
            - "private-registry"
  gitlab:
    enabled: true
    git:
      repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__developer-tools__gitlab.git
    values:
      global:
        certificates:
          image:
            repository: "###ZARF_REGISTRY###/ironbank/gitlab/gitlab/alpine-certificates"
        kubectl:
          image:
            repository: "###ZARF_REGISTRY###/ironbank/gitlab/gitlab/kubectl"
        busybox:
          image:
            repository: "###ZARF_REGISTRY###/ironbank/redhat/ubi/ubi8"
        istio:
          enabled: true
        imagePullSecrets:
          - "private-registry"
      istio:
        enabled: true
        injection: enabled
        gitlab:
          gateways:
            - istio-system/public
      upgradeCheck:
        image:
          repository: "###ZARF_REGISTRY###/ironbank/redhat/ubi/ubi8"
      redis:
        metrics:
          image:
            registry: "###ZARF_REGISTRY###/ironbank/bitnami"
        image:
          registry: "###ZARF_REGISTRY###/ironbank/opensource"
      registry:
        image:
          repository: "###ZARF_REGISTRY###/ironbank/gitlab/gitlab/gitlab-container-registry"
      shared-secrets:
        selfsign:
          image:
            repository: "###ZARF_REGISTRY###/ironbank/gitlab/gitlab/cfssl-self-sign"
      gitlab:
        task-runner:
          image:
            repository: "###ZARF_REGISTRY###/ironbank/gitlab/gitlab/gitlab-task-runner"
        gitlab-exporter:
          image:
            repository: "###ZARF_REGISTRY###/ironbank/gitlab/gitlab/gitlab-exporter"
        migrations:
          image:
            repository: "###ZARF_REGISTRY###/ironbank/gitlab/gitlab/gitlab-task-runner"
        webservice:
          image:
            repository: "###ZARF_REGISTRY###/ironbank/gitlab/gitlab/gitlab-webservice"
          workhorse:
            image: "###ZARF_REGISTRY###/ironbank/gitlab/gitlab/gitlab-workhorse"
        sidekiq:
          image:
            repository: "###ZARF_REGISTRY###/ironbank/gitlab/gitlab/gitlab-sidekiq"
        gitaly:
          image:
            repository: "###ZARF_REGISTRY###/ironbank/gitlab/gitlab/gitaly"
        gitlab-shell:
          image:
            repository: "###ZARF_REGISTRY###/ironbank/gitlab/gitlab/gitlab-shell"
        praefect:
          image:
            repository: "###ZARF_REGISTRY###/ironbank/gitlab/gitlab/gitaly"
      minio:
        image: "###ZARF_REGISTRY###/ironbank/opensource/minio/minio"
        minioMc:
          image: "###ZARF_REGISTRY###/ironbank/opensource/minio/mc"
  gitlabRunner:
    enabled: true
    git:
      repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__developer-tools__gitlab-runner.git
    values:
      image: "###ZARF_REGISTRY###/ironbank/gitlab/gitlab-runner/gitlab-runner:v13.12.0"
      runners:
        config: |
          [[runners]]
            clone_url = "http://gitlab-webservice-default.gitlab.svc.cluster.local:8181"
            cache_dir = "/tmp/gitlab-runner/cache"
            [runners.kubernetes]
              image = "###ZARF_REGISTRY###/ironbank/redhat/ubi/ubi8:8.4"
              helper_image = "###ZARF_REGISTRY###/ironbank/gitlab/gitlab-runner/gitlab-runner-helper:v13.12.0"
              image_pull_secrets = ["private-registry"]
            [runners.kubernetes.pod_labels]
              "job_id" = "${CI_JOB_ID}"
              "job_name" = "${CI_JOB_NAME}"
              "pipeline_id" = "${CI_PIPELINE_ID}"
  minioOperator:
    enabled: true
    git:
      repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__application-utilities__minio-operator.git
    values:
      operator:
        image:
          repository: "###ZARF_REGISTRY###/ironbank/opensource/minio/operator"
      istio:
        enabled: true
  mattermostoperator:
    # Disabling Mattermost for now, since it isn't working properly and there are other higher priorities to get working.
    enabled: false
    git:
      repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__collaboration-tools__mattermost-operator.git
      tag: "1.16.0-bb.0"
    values:
      image:
        repository: "###ZARF_REGISTRY###/ironbank/opensource/mattermost/mattermost-operator"
      istio:
        enabled: true
  mattermost:
    # Disabling Mattermost for now, since it isn't working properly and there are other higher priorities to get working
    enabled: false
    git:
      repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__collaboration-tools__mattermost.git
      tag: 0.2.4-bb.0
    values:
      image:
        name: "###ZARF_REGISTRY###/ironbank/opensource/mattermost/mattermost"
      istio:
        enabled: true
        chat:
          gateways:
            - istio-system/public
      minio:
        install: true
        bucketCreationImage: "###ZARF_REGISTRY###/ironbank/opensource/minio/mc:RELEASE.2021-09-02T09-21-27Z"
      postgresql:
        image:
          registry: "###ZARF_REGISTRY###/ironbank"
      database:
        readinessCheck:
          image: "###ZARF_REGISTRY###/ironbank/opensource/postgres/postgresql12:12.8"
  nexus:
    enabled: true
    git:
      repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__developer-tools__nexus.git
      tag: 36.0.0-bb.0
    values:
      job_image:
        repository: "###ZARF_REGISTRY###/ironbank/redhat/ubi/ubi8-minimal"
      image:
        repository: "###ZARF_REGISTRY###/ironbank/sonatype/nexus/nexus"
      istio:
        enabled: true
        nexus:
          gateways:
            - istio-system/public
  keycloak:
    enabled: false

  # All the other add-ons that we aren't using
  argocd:
    enabled: false
  authservice:
    enabled: false
  anchore:
    enabled: false
  minio:
    enabled: true
    git:
      repo: http://zarf-gitea-http.zarf.svc.cluster.local:3000/zarf-git-user/mirror__repo1.dso.mil__platform-one__big-bang__apps__application-utilities__minio.git
      tag: "4.2.3-bb.1"
    values:
      istio:
        enabled: true
        virtualService:
          enabled: true
          gateways:
            - istio-system/public
        gateways:
          - istio-system/public
      hostname: bigbang.dev
      tenants:
        buckets:
          - name: postgres-operator-backups
            policy: public
        image:
          repository: "###ZARF_REGISTRY###/ironbank/opensource/minio/minio"
        pools:
            ## Servers specifies the number of MinIO Tenant Pods / Servers in this pool.
            ## For standalone mode, supply 1. For distributed mode, supply 4 or more.
            ## Note that the operator does not support upgrading from standalone to distributed mode.
          - servers: 1
            ## volumesPerServer specifies the number of volumes attached per MinIO Tenant Pod / Server.
            volumesPerServer: 4
            ## size specifies the capacity per volume
            size: 1Gi
            ## storageClass specifies the storage class name to be used for this pool
            storageClassName: "###ZARF_STORAGE_CLASS###"
            ## Used to specify a toleration for a pod
            tolerations: {}
            ## nodeSelector parameters for MinIO Pods. It specifies a map of key-value pairs. For the pod to be
            ## eligible to run on a node, the node must have each of the
            ## indicated key-value pairs as labels.
            ## Read more here: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
            nodeSelector: {}
            ## Affinity settings for MinIO pods. Read more about affinity
            ## here: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity.
            affinity: {}
            ## Configure resource requests and limits for MinIO containers
            resources:
              requests:
                cpu: "250m"
                memory: "1Gi"
              limits:
                cpu: "500m"
                memory: "1Gi"
              ## Configure security context
              ## BB Note: Defaults for Ironbank image are 1001 for user, group, and fsGroup
            securityContext:
              runAsUser: 1001
              runAsGroup: 1001
              fsGroup: 1001
      console:
        enabled: true
  velero:
    enabled: false
